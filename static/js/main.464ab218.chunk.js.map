{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","window","onload","output","document","getElementById","datasize","missingElem","innerHTML","dataset","len","removeCount","removeIndex","arr","i","push","k","missing","Math","floor","random","length","splice","chop","needle","hay","data","testsRun","a","b","cut","comp","half","slice","testResults","startTime","Date","testTime","getTime","sort","join","whatis","className","class","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6KAyGeA,MAvGf,WA2FE,OAJAC,OAAOC,OAAS,YAtFhB,WACE,IAAIC,EAASC,SAASC,eAAe,UACnCC,EAAW,IAEXC,EAAc,GAEhBJ,EAAOK,UAAY,GAEnB,IAAIC,EAAW,SAAUC,EAAKC,GAG5B,IAFA,IAMIC,EANAC,EAAM,GAEDC,EAAI,EAAGA,EAYfR,IAZwBQ,IACvBD,EAAIE,KAAKD,GAKX,IAAK,IAAIE,EAAI,EAAGA,EAMLC,EANsBD,IAC/BJ,EAAcM,KAAKC,MAAMD,KAAKE,SAAWP,EAAIQ,OAAS,GACtDd,EAAYQ,KAAKF,EAAIS,OAAOV,EAAa,IAG3C,OAAOC,EAdM,GAiBf,SAASU,EAAKC,EAAQC,EAAKC,GACzBC,IACAD,EAAOA,GAAQ,GAEf,IAkBeE,EAAGC,EAlBdnB,EAAMe,EAAIJ,OACZS,EAAMZ,KAAKC,MAAMT,EAAM,GAEvBqB,GAeaH,EAfEJ,KAeCK,EAhBNJ,EAAIK,IAkBP,EAEAF,EAAIC,GAAK,EAAI,EAjBtB,OAAa,IAATE,EACK,YAAcJ,EAAW,WAEhCD,EAAKM,MAAiB,IAAVD,EAAcN,EAAIQ,MAAM,EAAGH,GAAOL,EAAIQ,MAAMH,EAAM,GAE1DJ,EAAKM,KAAKX,OAAS,EACdE,EAAKC,EAAQE,EAAKM,KAAMN,GAExB,gBAAkBC,EAAW,WAkB1C,IALA,IAAIA,EACFO,EAAc,GACdC,EAAY,IAAIC,KAGTtB,EAAI,EAAGA,GAAKR,EAAUQ,IAC7Ba,EAAW,EACXO,GAAe,MAAQpB,EAAI,KAAOS,EAAKT,EAAGL,GAAW,OAKvD,IACI4B,EACF/B,8BAJQ,IAAI8B,MAEQE,UAAYH,EAAUG,WAEI,IAAO,WAEvD/B,EAAcA,EACXgC,MAAK,SAAUX,EAAGC,GACjB,OAAOD,EAAIC,KAEZW,KAAK,MAERrC,EAAOK,UACL,MACA6B,EADA,wBAIA9B,EACA,OACA2B,EAGFO,IAIA,qBAAKC,UAAU,MAAf,SAEE,sBAAKC,MAAM,YAAX,UACE,sDACA,8CACA,qBAAKC,GAAG,iBCvFDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpD,SAASC,eAAe,SAM1BwC,K","file":"static/js/main.464ab218.chunk.js","sourcesContent":["import \"./App.css\";\n\nfunction App() {\n  function whatis() {\n    var output = document.getElementById(\"output\"),\n      datasize = 10000,\n      missing = 5,\n      missingElem = [];\n\n    output.innerHTML = \"\";\n\n    var dataset = (function (len, removeCount) {\n      var arr = [];\n\n      for (var i = 1; i < len; i++) {\n        arr.push(i);\n      }\n\n      var removeIndex;\n\n      for (var k = 0; k < removeCount; k++) {\n        removeIndex = Math.floor(Math.random() * arr.length - 1);\n        missingElem.push(arr.splice(removeIndex, 1));\n      }\n\n      return arr;\n    })(datasize, missing);\n\n    function chop(needle, hay, data) {\n      testsRun++;\n      data = data || {};\n\n      var len = hay.length,\n        cut = Math.floor(len / 2),\n        testVal = hay[cut],\n        comp = compare(needle, testVal);\n\n      if (comp === 0) {\n        return \"found in \" + testsRun + \" tests.\";\n      } else {\n        data.half = comp === -1 ? hay.slice(0, cut) : hay.slice(cut + 1);\n\n        if (data.half.length > 0) {\n          return chop(needle, data.half, data);\n        } else {\n          return \"not found in \" + testsRun + \" tests.\";\n        }\n      }\n    }\n\n    function compare(a, b) {\n      if (a == b) {\n        return 0;\n      } else {\n        return a < b ? -1 : 1;\n      }\n    }\n\n    var testsRun,\n      testResults = \"\",\n      startTime = new Date(),\n      endTime;\n\n    for (var i = 1; i <= datasize; i++) {\n      testsRun = 0;\n      testResults += \"<p>\" + i + \": \" + chop(i, dataset) + \"</p>\";\n    }\n\n    endTime = new Date();\n\n    var elapsed = endTime.getTime() - startTime.getTime();\n    var testTime =\n      datasize + \" tests completed in \" + elapsed / 1000 + \" seconds\";\n\n    missingElem = missingElem\n      .sort(function (a, b) {\n        return a - b;\n      })\n      .join(\", \");\n\n    output.innerHTML =\n      \"<p>\" +\n      testTime +\n      \"</p>\" +\n      \"<p>Missing Elem: \" +\n      missingElem +\n      \"</p>\" +\n      testResults;\n  }\n  window.onload = function () {\n    whatis();\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <h1>Hello</h1> */}\n      <div class=\"container\">\n        <h1>Karate Chop Solution</h1>\n        <p>By :Yogesh@17</p>\n        <div id=\"output\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}